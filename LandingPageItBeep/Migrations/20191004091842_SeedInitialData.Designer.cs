// <auto-generated />
using System;
using LandingPageItBeep.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LandingPageItBeep.Migrations
{
    [DbContext(typeof(LandingPageItBeepContext))]
    [Migration("20191004091842_SeedInitialData")]
    partial class SeedInitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LandingPageItBeep.Models.Lookup", b =>
                {
                    b.Property<int>("LookupID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CraetedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired();

                    b.Property<string>("LookupName");

                    b.Property<string>("LookupNameEn");

                    b.HasKey("LookupID");

                    b.ToTable("Lookups");

                    b.HasData(
                        new
                        {
                            LookupID = 1,
                            CraetedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 4, 12, 18, 41, 936, DateTimeKind.Local).AddTicks(1788),
                            IsDeleted = false,
                            LookupName = "العروض",
                            LookupNameEn = "Offers"
                        },
                        new
                        {
                            LookupID = 2,
                            CraetedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 4, 12, 18, 41, 957, DateTimeKind.Local).AddTicks(4933),
                            IsDeleted = false,
                            LookupName = "وقت الطلب",
                            LookupNameEn = "Order Time"
                        });
                });

            modelBuilder.Entity("LandingPageItBeep.Models.LookupCategory", b =>
                {
                    b.Property<int>("LookupCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CraetedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("LookupID");

                    b.Property<string>("LookupName");

                    b.Property<string>("LookupNameEn");

                    b.HasKey("LookupCategoryID");

                    b.HasIndex("LookupID");

                    b.ToTable("LookupCategory");

                    b.HasData(
                        new
                        {
                            LookupCategoryID = 1,
                            CraetedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 4, 12, 18, 41, 958, DateTimeKind.Local).AddTicks(52),
                            IsDeleted = false,
                            LookupID = 1,
                            LookupName = "عرض 1",
                            LookupNameEn = "Offer 1"
                        },
                        new
                        {
                            LookupCategoryID = 2,
                            CraetedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 4, 12, 18, 41, 958, DateTimeKind.Local).AddTicks(6267),
                            IsDeleted = false,
                            LookupID = 1,
                            LookupName = "عرض 2",
                            LookupNameEn = "Offer 2"
                        },
                        new
                        {
                            LookupCategoryID = 3,
                            CraetedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 4, 12, 18, 41, 958, DateTimeKind.Local).AddTicks(6311),
                            IsDeleted = false,
                            LookupID = 1,
                            LookupName = "عرض 3",
                            LookupNameEn = "Offer 3"
                        },
                        new
                        {
                            LookupCategoryID = 4,
                            CraetedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 4, 12, 18, 41, 958, DateTimeKind.Local).AddTicks(6316),
                            IsDeleted = false,
                            LookupID = 2,
                            LookupName = "استفسار عام",
                            LookupNameEn = "General Inquiry"
                        },
                        new
                        {
                            LookupCategoryID = 5,
                            CraetedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 4, 12, 18, 41, 958, DateTimeKind.Local).AddTicks(6321),
                            IsDeleted = false,
                            LookupID = 2,
                            LookupName = "خلال شهر",
                            LookupNameEn = "During Months"
                        },
                        new
                        {
                            LookupCategoryID = 6,
                            CraetedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 4, 12, 18, 41, 958, DateTimeKind.Local).AddTicks(6326),
                            IsDeleted = false,
                            LookupID = 2,
                            LookupName = "خلال اسبوع",
                            LookupNameEn = "During Week"
                        });
                });

            modelBuilder.Entity("LandingPageItBeep.Models.LookupCategory", b =>
                {
                    b.HasOne("LandingPageItBeep.Models.Lookup", "Lookup")
                        .WithMany("LookupCategories")
                        .HasForeignKey("LookupID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
